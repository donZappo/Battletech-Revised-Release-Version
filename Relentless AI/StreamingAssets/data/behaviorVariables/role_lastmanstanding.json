{
    "behaviorVariables" : [
	{
	    /* How much accuracy (0.0 - 1.0) is required to consider
	       an attack that will overheat */
            "k" : "Float_AccuracyNeededForOverheatAttack",
            "v" : {
		"type" : "Float",
		"floatVal" : 0.65
        }
	},
	{
	    /* How much a location must be damaged before an overheat
	       attack will be considered, as a fraction from 0.0
	       (undamaged) to 1.0 (location destroyed) */
            "k" : "Float_ExistingTargetDamageForOverheatAttack",
            "v" : {
		"type" : "Float",
		"floatVal" : 0
        }
	},
	{
	    /* How much a location must be damaged before a DFA attack
	       will be considered , as a fraction from 0.0 (undamaged)
	       to 1.0 (location destroyed) */
            "k" : "Float_ExistingTargetDamageForDFAAttack",
            "v" : {
		"type" : "Float",
		"floatVal" : 0
        }
	},
	{
	    /* Maximum leg damage allowed for DFA attack (above which
	       attacks will not be considered), as a fraction from 0.0
	       (undamaged) to 1.0 (location destroyed) */
            "k" : "Float_OwnMaxLegDamageForDFAAttack",
            "v" : {
		"type" : "Float",
		"floatVal" : 1
        }
	},
	{
	    /* Influence Factor Weight for preferring moving less. */
            "k" : "Float_PreferLowerMovementFactorWeight",
            "v" : {
		"type" : "Float",
		"floatVal" : -0.6
        }
	},
	{
	    /* Influence Factor Weight for preferring moving less WHEN
	       SPRINTING. */
            "k" : "Float_SprintPreferLowerMovementFactorWeight",
            "v" : {
		"type" : "Float",
		"floatVal" : -0.6
        }
	},
	{
	    /* Influence Factor to prefer not to be surrounded by hostile units.*/
	    "k" : "Float_PreferNotSurroundedByHostileUnitsFactorWeight",
	    "v" : {
			"type" : "Float",
			"floatVal" : 0
	    }
	},
	{
	    /* Influence Factor to prefer not to be surrounded by
	       hostile units WHEN SPRINTING.*/
	    "k" : "Float_SprintPreferNotSurroundedByHostileUnitsFactorWeight",
	    "v" : {
			"type" : "Float",
			"floatVal" : 0
	    }
	},
	{
	    /* Appetitive Influence Factor Weight to approach ideal
	       weapon range to hostile. */
	    "k" : "Float_AppetitivePreferIdealWeaponRangeToHostileFactorWeight",
	    "v" : {
		"type" : "Float",
		"floatVal" : 0.1
	    }
	},
	{
	    /* Appetitive Influence Factor Weight to approach ideal
	       weapon range to hostile WHEN SPRINTING. */
	    "k" : "Float_SprintAppetitivePreferIdealWeaponRangeToHostileFactorWeight",
	    "v" : {
		"type" : "Float",
		"floatVal" : 0.1
	    }
	},
	{
	    /* Influence Factor Weight to prefer locations close to
	       optimal distance to other hostiles. */
            "k" : "Float_PreferOptimalDistanceToHostileFactorWeight",
            "v" : {
		"type" : "Float",
		"floatVal" : 0
            }
	},
	{
	    /* Influence Factor Weight to prefer locations close to
	       optimal distance to other hostiles WHEN SPRINTING. */
            "k" : "Float_SprintPreferOptimalDistanceToHostileFactorWeight",
            "v" : {
		"type" : "Float",
		"floatVal" : 0
        }
	},
	{
	    /* Whether when enemy is ghosted, to use sprint or walk distance as marker to calculate influence map positional factors.
		Lerp is 0 - 1, Walking to Sprinting*/
		"k" : "Float_SignalInWeapRngWhenEnemyGhostedWithinMoveDistance",
		"v" : {
			"type" : "Float",
			"floatVal" : 0.5
		}
	},
	{
	    /* How much heat is acceptable before being subject to "overheat" logic.
	       0: no heat
	       1: Heat level 1 (unused?)
	       2: Heat level 2
	       3: Max heat */
            "k" : "Float_AcceptableHeatLevel",
            "v" : {
		"type" : "Float",
		"floatVal" : 1.99
        }
	},
	{
	    /* How much heat is acceptable before using "Vent Coolant" skill
	       0: no heat
	       1: Heat level 1 (unused?)
	       2: Heat level 2
	       3: Max heat */
            "k" : "Float_VentCoolantHeatThreshold",
            "v" : {
		"type" : "Float",
		"floatVal" : 1.5
        }
	},
	{
	    /* Influence Factor Weight to be inside SprintExclusionRadius. */
	    "k" : "Float_PreferInsideSprintExclusionRadiusHostileFactorWeight",
	    "v" : {
		"type" : "Float",
		"floatVal" : 1.5
	    }
	},
	{
	    /* Description: Number of points of damage that a sensor
	      locking turn needs to do over a straight up shooting
	      turn before deciding to sensor lock. Positive is a
	      shooting bias, negative is a sensor lock bias.*/
	    "k" : "Float_MinimumSensorLockQuality",
	    "v" : {
		"type": "Float",
		"floatVal" : 99
	    }
	},
	{
	    /* Number of active probe targets before we even try to activate 
	    active probe */
		"k" : "Int_MinimumActiveProbeCount",
		"v" : 
		{
			"type" : "Int",
			"IntVal" : "999"
		}
	},
	{
            /* If true, drop out of long range pathfinding if we can walk to
             * a destination with LOF to a hostile. (TODO: roll this behavior out to
             * all encounters.) */

	    "k" : "Bool_SimpleShortRangeLOF",
	    "v" : {
			"type" : "Bool",
			"boolVal" : false
	    }
	},
	{
	    /* Whether the AI should always be in offensive mood. */
            "k" : "Bool_AlwaysOffensiveMood",
            "v" : {
		"type" : "Bool",
		"boolVal" : true
        }
	}
    ]
}
